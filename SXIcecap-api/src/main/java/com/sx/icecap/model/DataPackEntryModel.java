/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sx.icecap.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.model.TrashedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the DataPackEntry service. Represents a row in the &quot;SX_ICECAP_DataPackEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.sx.icecap.model.impl.DataPackEntryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.sx.icecap.model.impl.DataPackEntryImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DataPackEntry
 * @generated
 */
@ProviderType
public interface DataPackEntryModel
	extends BaseModel<DataPackEntry>, GroupedModel, ShardedModel,
			StagedAuditedModel, TrashedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a data pack entry model instance should use the {@link DataPackEntry} interface instead.
	 */

	/**
	 * Returns the primary key of this data pack entry.
	 *
	 * @return the primary key of this data pack entry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this data pack entry.
	 *
	 * @param primaryKey the primary key of this data pack entry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this data pack entry.
	 *
	 * @return the uuid of this data pack entry
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this data pack entry.
	 *
	 * @param uuid the uuid of this data pack entry
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the data pack entry ID of this data pack entry.
	 *
	 * @return the data pack entry ID of this data pack entry
	 */
	public long getDataPackEntryId();

	/**
	 * Sets the data pack entry ID of this data pack entry.
	 *
	 * @param dataPackEntryId the data pack entry ID of this data pack entry
	 */
	public void setDataPackEntryId(long dataPackEntryId);

	/**
	 * Returns the group ID of this data pack entry.
	 *
	 * @return the group ID of this data pack entry
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this data pack entry.
	 *
	 * @param groupId the group ID of this data pack entry
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this data pack entry.
	 *
	 * @return the company ID of this data pack entry
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this data pack entry.
	 *
	 * @param companyId the company ID of this data pack entry
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this data pack entry.
	 *
	 * @return the user ID of this data pack entry
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this data pack entry.
	 *
	 * @param userId the user ID of this data pack entry
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this data pack entry.
	 *
	 * @return the user uuid of this data pack entry
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this data pack entry.
	 *
	 * @param userUuid the user uuid of this data pack entry
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this data pack entry.
	 *
	 * @return the user name of this data pack entry
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this data pack entry.
	 *
	 * @param userName the user name of this data pack entry
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this data pack entry.
	 *
	 * @return the create date of this data pack entry
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this data pack entry.
	 *
	 * @param createDate the create date of this data pack entry
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this data pack entry.
	 *
	 * @return the modified date of this data pack entry
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this data pack entry.
	 *
	 * @param modifiedDate the modified date of this data pack entry
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this data pack entry.
	 *
	 * @return the status of this data pack entry
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this data pack entry.
	 *
	 * @param status the status of this data pack entry
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this data pack entry.
	 *
	 * @return the status by user ID of this data pack entry
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this data pack entry.
	 *
	 * @param statusByUserId the status by user ID of this data pack entry
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this data pack entry.
	 *
	 * @return the status by user uuid of this data pack entry
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this data pack entry.
	 *
	 * @param statusByUserUuid the status by user uuid of this data pack entry
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this data pack entry.
	 *
	 * @return the status by user name of this data pack entry
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this data pack entry.
	 *
	 * @param statusByUserName the status by user name of this data pack entry
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this data pack entry.
	 *
	 * @return the status date of this data pack entry
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this data pack entry.
	 *
	 * @param statusDate the status date of this data pack entry
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the data set ID of this data pack entry.
	 *
	 * @return the data set ID of this data pack entry
	 */
	public long getDataSetId();

	/**
	 * Sets the data set ID of this data pack entry.
	 *
	 * @param dataSetId the data set ID of this data pack entry
	 */
	public void setDataSetId(long dataSetId);

	/**
	 * Returns the data set folder ID of this data pack entry.
	 *
	 * @return the data set folder ID of this data pack entry
	 */
	public long getDataSetFolderId();

	/**
	 * Sets the data set folder ID of this data pack entry.
	 *
	 * @param dataSetFolderId the data set folder ID of this data pack entry
	 */
	public void setDataSetFolderId(long dataSetFolderId);

	/**
	 * Returns the data pack ID of this data pack entry.
	 *
	 * @return the data pack ID of this data pack entry
	 */
	public long getDataPackId();

	/**
	 * Sets the data pack ID of this data pack entry.
	 *
	 * @param dataPackId the data pack ID of this data pack entry
	 */
	public void setDataPackId(long dataPackId);

	/**
	 * Returns the entry data of this data pack entry.
	 *
	 * @return the entry data of this data pack entry
	 */
	@AutoEscape
	public String getEntryData();

	/**
	 * Sets the entry data of this data pack entry.
	 *
	 * @param entryData the entry data of this data pack entry
	 */
	public void setEntryData(String entryData);

	/**
	 * Returns the trash entry created when this data pack entry was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this data pack entry.
	 *
	 * @return the trash entry created when this data pack entry was moved to the Recycle Bin
	 */
	@Override
	public com.liferay.trash.kernel.model.TrashEntry getTrashEntry()
		throws PortalException;

	/**
	 * Returns the class primary key of the trash entry for this data pack entry.
	 *
	 * @return the class primary key of the trash entry for this data pack entry
	 */
	@Override
	public long getTrashEntryClassPK();

	/**
	 * Returns the trash handler for this data pack entry.
	 *
	 * @return the trash handler for this data pack entry
	 * @deprecated As of Judson (7.1.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public com.liferay.portal.kernel.trash.TrashHandler getTrashHandler();

	/**
	 * Returns <code>true</code> if this data pack entry is in the Recycle Bin.
	 *
	 * @return <code>true</code> if this data pack entry is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrash();

	/**
	 * Returns <code>true</code> if the parent of this data pack entry is in the Recycle Bin.
	 *
	 * @return <code>true</code> if the parent of this data pack entry is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrashContainer();

	@Override
	public boolean isInTrashExplicitly();

	@Override
	public boolean isInTrashImplicitly();

	/**
	 * Returns <code>true</code> if this data pack entry is approved.
	 *
	 * @return <code>true</code> if this data pack entry is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this data pack entry is denied.
	 *
	 * @return <code>true</code> if this data pack entry is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this data pack entry is a draft.
	 *
	 * @return <code>true</code> if this data pack entry is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this data pack entry is expired.
	 *
	 * @return <code>true</code> if this data pack entry is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this data pack entry is inactive.
	 *
	 * @return <code>true</code> if this data pack entry is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this data pack entry is incomplete.
	 *
	 * @return <code>true</code> if this data pack entry is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this data pack entry is pending.
	 *
	 * @return <code>true</code> if this data pack entry is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this data pack entry is scheduled.
	 *
	 * @return <code>true</code> if this data pack entry is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}